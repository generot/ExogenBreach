--COMBAT_BACKUP--
//Collider2D[] entity_array = Physics2D.OverlapCircleAll(point.position, attackRange, hostile);
        //foreach (Collider2D Enemy in entity_array)
        //{
        //    Debug.Log("we hit " + Enemy);
        //
        //    if(animator.GetBool("IsFighting"))
        //        Enemy.gameObject.GetComponent<Enemy>().b_entity.TakeDamage(dmg);
        //
        //    Debug.Log(Enemy.gameObject.GetComponent<Enemy>().b_entity.health);
        //
        //    if (Enemy.gameObject.GetComponent<Enemy>().b_entity.health <= 0)
        //    {
        //        Destroy(Enemy.gameObject, 0);
        //    }
        //}
--COMBAT_BACKUP--

--ENEMY_COMBAT_BACKUP--
Collider2D[] target_array = Physics2D.OverlapCircleAll(EnemySPoint.position, range, Target);
        foreach (Collider2D hit in target_array)
        {
            if (hit.gameObject)
            {
                hit.gameObject.GetComponent<pctrl>().b_entity.TakeDamage(dmg);
                Debug.Log("Player has " + hit.gameObject.GetComponent<pctrl>().b_entity.health + " health");
            }

            yield return 10;
        }
--ENEMY_COMBAT_BACKUP--

/*IEnumerator shoot(Transform transform, Vector2 Pos)
    { 
        RaycastHit2D enemyInf = Physics2D.Raycast(transform.position, Pos, units);
        if (enemyInf && enemyInf.collider.CompareTag("Enemy")) {
            Enemy hostile = enemyInf.transform.GetComponent<Enemy>();
            if (hostile != null)
            {
                hostile.b_entity.TakeDamage(damage);
                Debug.Log(hostile.b_entity.health);
                yield return 0; //for now because its a coroutine, but later because it will be an animation :)

                if (hostile.b_entity.health <= 0)
                {
                    yield return 0; //same as ^
                    Destroy(hostile.gameObject, 0);
                }
            }
        }
    }*/